(function(){"use strict";self.onmessage=function(u){const{elevators:l,request:i}=u.data,d=t=>{const o=t.currentFloor,s=[...t.targetFloors],c=t.direction;let r=0,n=o;const F=a(s,c);for(const e of F)r+=Math.abs(e-n),n=e;const M=a([...s,i.floor],c);let f=0;n=o;for(const e of M)f+=Math.abs(e-n),n=e;const g=f-r,w=s.length*.3,m=h(t,i)?-.5:99,p=Math.abs(o-i.floor)*.2;return g+w+m+p},a=(t,o)=>{const s=[...new Set(t)];if(o==="up")return s.sort((r,n)=>r-n);if(o==="down")return s.sort((r,n)=>n-r);const c=t.length>0?t[0]:0;return s.sort((r,n)=>Math.abs(r-c)-Math.abs(n-c))},h=(t,o)=>t.direction==="none"?!0:t.direction==="up"?o.floor>=t.currentFloor&&o.direction==="up":t.direction==="down"?o.floor<=t.currentfloor&&o.direction==="down":!1,b=l.map(t=>({id:t.id,score:d(t)})).reduce((t,o)=>o.score<t.score?o:t,{id:-1,score:1/0});self.postMessage({bestElevatorId:b.id})}})();
